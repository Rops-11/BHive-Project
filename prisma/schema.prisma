generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL_DEV")
}

model User {
  id        String    @id @db.Uuid
  isAdmin   Boolean   @default(false)
  histories History[]
}

model Room {
  id          String    @id @default(uuid()) @db.Uuid
  roomType    String
  roomNumber  String    @unique
  isAvailable Boolean   @default(true)
  maxGuests   Int
  roomRate    Int
  bookings    Booking[]
}

model History {
  id        String  @id @default(uuid()) @db.Uuid
  userId    String  @db.Uuid
  bookingId String  @unique @db.Uuid
  booking   Booking @relation(fields: [bookingId], references: [id])
  user      User    @relation(fields: [userId], references: [id])
}

model Booking {
  id               String   @id @default(uuid()) @db.Uuid
  roomId           String   @db.Uuid
  dateBooked       DateTime @default(now())
  checkIn          DateTime
  checkOut         DateTime
  mobileNumber     String
  status           Status   @default(Reserved)  // This is only updated on the admin side. After acceptance of booking. Or during the walk-in booking.
  downPayment      Boolean  @default(false)
  name             String
  numberOfAdults   Int
  numberOfChildren Int
  shift            String?   @default("Online")// This is only updated on the admin side. After acceptance of booking. Or during the walk-in booking.
  room             Room     @relation(fields: [roomId], references: [id])
  history          History?
}

enum Status {
  Reserved
  Ongoing
  Complete
}